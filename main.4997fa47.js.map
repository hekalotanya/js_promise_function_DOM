{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","promise","Promise","resolve","reject","addEventListener","nodeName","id","printMessage","message","messageElement","document","createElement","classList","add","textContent","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GAQjBC,OANS,IAAIC,QAAQ,SAACC,EAASC,GACpCL,EAAQM,iBAAoBL,GAAAA,OAAAA,GAAa,WACvCG,EAAkBH,UAAAA,OAAAA,EAA6BD,qBAAAA,OAAAA,EAAQO,SAAiBP,UAAAA,OAAAA,EAAQQ,GAAhF,UAON,IAAMC,EAAe,SAACC,GAEdC,IAAAA,EAAiBC,SAASC,cAAc,OAE9CF,EAAeG,UAAUC,IAAI,WAC7BJ,EAAeK,YAAiBN,GAAAA,OAAAA,GAEhCE,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACfrB,QAAAA,EACAU,aAAAA","file":"main.4997fa47.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\nfunction waitFor(element, eventName) {\r\n// write your code here\r\n  const promise = new Promise((resolve, reject) => {\r\n    element.addEventListener(`${eventName}`, () => {\r\n      resolve(`It was ${eventName} on the element: ${element.nodeName}, id: ${element.id}.`);\r\n    });\r\n  });\r\n\r\n  return promise;\r\n}\r\n\r\nconst printMessage = (message) => {\r\n// write your code here\r\n  const messageElement = document.createElement('div');\r\n\r\n  messageElement.classList.add('message');\r\n  messageElement.textContent = `${message}`;\r\n\r\n  document.body.append(messageElement);\r\n};\r\n\r\nmodule.exports = {\r\n  waitFor,\r\n  printMessage,\r\n};\r\n"]}